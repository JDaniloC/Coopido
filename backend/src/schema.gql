# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  """User's address (neighborhood, street, etc)"""
  address: String!

  """User's age"""
  age: Int!

  """User's description of himself"""
  bio: String

  """User's date of birth"""
  birthDate: String!

  """User's city"""
  city: String!

  """User's level of education"""
  education: Education

  """Unique user e-mail"""
  email: String!

  """First part of full name"""
  firstName: String!

  """User's gender"""
  gender: Gender!

  """Genders of people that the user wants to meet"""
  genderOfInterest: Gender!

  """User ID"""
  id: String!

  """User's interests and hobbies"""
  interests: [Interests!]!

  """Languages the user speaks"""
  languages: [String!]

  """Last part of full name"""
  lastName: String!

  """User's occupation"""
  occupation: String

  """User's phone number"""
  phoneNumber: String

  """Profile image URL"""
  profileImg: String!

  """Login provider"""
  provider: String!

  """User's state"""
  state: String!

  """Unique user name to identify"""
  username: String!

  """A list of users that the user has disliked"""
  usersDisliked: [String!]

  """A list of users that the user has liked"""
  usersLiked: [String!]
}

"""The education levels."""
enum Education {
  bacharelado
  cursoTecnico
  doutorado
  ensinoFundamental
  ensinoMedio
  licenciatura
  mestrado
}

"""The biological gender."""
enum Gender {
  BOTH
  FEMALE
  MALE
}

"""The interests list."""
enum Interests {
  ART
  ARTISTS
  BASKETBALL
  BEAUTY
  BOOKS
  BUSINESS
  COOKING
  CULTURE
  DANCE
  ECONOMY
  FASHION
  FINANCE
  FOOD
  GAMES
  GEOGRAPHY
  HEALTH
  HISTORY
  LANGUAGES
  LITERATURE
  MOVIES
  MUSIC
  PHILOSOPHY
  PHOTOGRAPHY
  POLITICS
  RELIGION
  SOCCER
  SPORTS
  TECHNOLOGY
  TRAVEL
}

input LikeUserInput {
  """New e-mail user liked"""
  email: String!
}

type Mutation {
  createRelationship(contact: String!): Relationship!
  createUser(createUserInput: CreateUserInput!): UserOrError!
  likeUser(likeUserInput: LikeUserInput!): Boolean!
  removeRelationship(contact: String!): Relationship!
  removeUser: UserOrError!
  updateRelationship(updateRelationshipInput: UpdateRelationshipInput!): Relationship!
  updateUser(updateUserInput: UpdateUserInput!): UserOrError!
}

type Query {
  relationship(contact: String!): Relationship!
  relationships: [Relation!]!
  session: TokenOrError!
  user: UserOrError!
  users: [User!]!
}

type Relation {
  """If was blocked or not"""
  blocked: Boolean!

  """Relationship e-mails"""
  contacts: [String!]!

  """Users information"""
  infos: [UserInfo!]!
}

type Relationship {
  """If was blocked or not"""
  blocked: Boolean!

  """Who was blocked"""
  blockedEmail: String!

  """Relationship e-mails"""
  contacts: [String!]!
}

type Token {
  """Token string"""
  token: String!
}

union TokenOrError = Token | UserError

input UpdateRelationshipInput {
  blocked: Boolean!

  """The relationship e-mail"""
  contactEmail: String

  """User e-mail"""
  email: String
}

input UpdateUserInput {
  """User's address (neighborhood, street, etc)"""
  address: String

  """User's age"""
  age: Int

  """User's description of himself"""
  bio: String

  """User's date of birth"""
  birthDate: String

  """User's city"""
  city: String

  """User's level of education"""
  education: Education

  """Unique user e-mail"""
  email: String

  """First part of full name"""
  firstName: String

  """User's gender"""
  gender: Gender

  """Genders of people that the user wants to meet"""
  genderOfInterest: Gender

  """User ID"""
  id: String

  """User's interests and hobbies"""
  interests: [Interests!]

  """Languages the user speaks"""
  languages: [String!]

  """Last part of full name"""
  lastName: String

  """User's occupation"""
  occupation: String

  """User's phone number"""
  phoneNumber: String

  """Profile image URL"""
  profileImg: String

  """Login provider"""
  provider: String

  """User's state"""
  state: String

  """Unique user name to identify"""
  username: String

  """List of e-mails of users who the user disliked"""
  usersDisliked: [String!]

  """List of e-mails of users who the user was liked"""
  usersLiked: [String!]
}

type User {
  """User's address (neighborhood, street, etc)"""
  address: String!

  """User's age"""
  age: Int!

  """User's description of himself"""
  bio: String

  """User's date of birth"""
  birthDate: String!

  """User's city"""
  city: String!

  """User's level of education"""
  education: Education

  """Unique user e-mail"""
  email: String!

  """First part of full name"""
  firstName: String!

  """User's gender"""
  gender: Gender!

  """Genders of people that the user wants to meet"""
  genderOfInterest: Gender!

  """User's interests and hobbies"""
  interests: [Interests!]!

  """Languages the user speaks"""
  languages: [String!]

  """Last part of full name"""
  lastName: String!

  """User's occupation"""
  occupation: String

  """User's phone number"""
  phoneNumber: String

  """Profile image URL"""
  profileImg: String!

  """User's state"""
  state: String!

  """Unique user name to identify"""
  username: String!

  """List of e-mails of users who disliked the user"""
  usersDisliked: [String!]!

  """List of e-mails of users that the user liked"""
  usersLiked: [String!]!
}

type UserError {
  """The error message"""
  reason: String

  """The error title"""
  title: String
}

type UserInfo {
  """User's description of himself"""
  bio: String

  """Unique user e-mail"""
  email: String!

  """First part of full name"""
  firstName: String!

  """User's gender"""
  gender: Gender!

  """Last part of full name"""
  lastName: String!

  """Profile image URL"""
  profileImg: String!

  """Unique user name to identify"""
  username: String!
}

union UserOrError = User | UserError